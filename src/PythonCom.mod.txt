MODULE PythonCom

    VAR num WPW:=0;  ! What Python Wants
    VAR num WRD:=0;  ! What RAPID Does
    VAR bool ready_flag:= FALSE;  ! RAPID's ready flag
    VAR bool image_processed:= FALSE;  ! Python's ready flag
    VAR num gripper_height:= 10;
    CONST num safeHeight:= 60;  ! Close-up image height

    ! Where the selected puck is located
    VAR robtarget puck_robtarget := [[0,0,200],[0,1,0,0],[-1,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];

    VAR robtarget move_robtarget;  ! Target used to place puck
    VAR num puck_angle;  ! Angle puck should be rotated (optional)

    CONST robtarget middleOfTable:=[[0,0,0],[0,1,0,0],[-1,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];

    ! Overview image position
    VAR robtarget overview:=[[0,0,500],[0,1,0,0],[-1,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];

    TASK PERS wobjdata wobjTableR:=[FALSE,TRUE,"",[[150,500,8],[0.707106781,0,0,-0.707106781]],[[0,0,0],[1,0,0,0]]];
    PERS tooldata tGripper:=[TRUE,[[0,0,114.25],[0,0,0,1]],[1,[-0.095984607,0.082520613,38.69176324],[1,0,0,0],0,0,0]];

    PROC main()

        closeGripper(FALSE);
        MoveJ overview,v100,z10,tGripper\WObj:=wobjTableR;

        ready_flag:=TRUE;

        WHILE TRUE DO

            IF WPW <> 0 THEN

                WRD:=WPW;
                WPW:=0;

                TEST WRD

                    CASE 1:
                    
                    wait_for_py;
                    MoveL offs(puck_robtarget, 0, 0, 0),v1000, fine,tGripper\WObj:=wobjTableR;
		    ready_flag:=TRUE;

                ENDTEST
            ENDIF
            WRD:=0;
        ENDWHILE
    ENDPROC


    ! wait for python to send command
    PROC wait_for_py()
        WHILE NOT impython_ready DO
        ENDWHILE
        python_ready:=FALSE;
    ENDPROC

ENDMODULE